; {{ ansible_managed }}

[broker]
; IP address the broker will listen and accept tunnels on
address={{ item.broker.address }}
; Ports where the broker will listen on
port={{ item.broker.port }}
; Interface with that IP address
interface={{ item.broker.interface }}
; Maximum number of cached cookies, required for establishing a
; session with the broker
max_cookies=300
; Maximum number of tunnels that will be allowed by the broker
max_tunnels=300
; Tunnel port base
port_base={{ item.broker.port_base }}
; Tunnel id base
tunnel_id_base={{ item.broker.tunnel_id_base }}
; Namespace (for running multiple brokers); note that you must also
; configure disjunct ports, and tunnel identifiers in order for
; namespacing to work
namespace={{ item.name }}
; Tunnel timeout interval in seconds
tunnel_timeout=30
; Should PMTU discovery be enabled
pmtu_discovery=false
; check if all kernel module are loaded. Do not check for built-ins.
check_modules=true

[log]
; Log filename
filename=tunneldigger-broker-{{ item.name}}.log
; Verbosity
verbosity=DEBUG
; Should IP addresses be logged or not
log_ip_addresses=false

[hooks]
; Arguments to the session.{up,pre-down,down} hooks are as follows:
;
;    <tunnel_id> <session_id> <interface> <mtu> <endpoint_ip> <endpoint_port> <local_port>
;
; Arguments to the session.mtu-changed hook are as follows:
;
;    <tunnel_id> <session_id> <interface> <old_mtu> <new_mtu>
;

; Called after the tunnel interface goes up
session.up=/srv/tunneldigger/broker/scripts/up-hook-{{ item.name }}.sh
; Called just before the tunnel interface goes down
session.pre-down=/srv/tunneldigger/broker/scripts/down-hook-{{ item.name }}.sh
; Called after the tunnel interface goes down
session.down=
; Called after the tunnel MTU gets changed because of PMTU discovery
session.mtu-changed=
